name: Generate Holidays JSON

on:
    schedule:
        - cron: '0 20 15 * *' # 12点自动执行(UTC+8)
    workflow_dispatch: # 允许手动触发

env:
    # 保存文件夹
    OUTPUI_PATH: ${{ github.workspace }}/holidays/
    
    # 数据来源
    SOURCE: https://www.gov.cn/

    # 数据中心文件
    DATA_CENTER_FILE: ${{ github.workspace }}/data.json

    # 在数据中心的标识
    DATA_CENTER_NAME: holidays

jobs:
    generate:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.8"

            - name: Install dependencies
              working-directory: .github/holidays
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt

            # 获取当前年份和下一年份
            - name: Get current and next year
              id: years
              run: |
                  current_year=$(date +%Y)
                  next_year=$((current_year + 1))
                  echo "current_year=$current_year" >> $GITHUB_OUTPUT
                  echo "next_year=$next_year" >> $GITHUB_OUTPUT

            # 获取当前年份的节假日数据
            - name: Get holidays data
              id: get_holidays
              working-directory: .github/holidays
              run: |
                  python holidays.py -y ${{ steps.years.outputs.current_year }} ${{ steps.years.outputs.next_year}} -o ${{ env.OUTPUI_PATH }}

            - name: Update JSON file
              uses: actions/github-script@v6
              with:
                  script: |
                      const fs = require('fs');
                      let json = {}; // 默认值为空对象

                      try {
                          // 尝试读取文件
                          const data = fs.readFileSync(process.env.DATA_CENTER_FILE, 'utf8');
                          json = JSON.parse(data); // 如果文件存在且内容合法，解析为 JSON 对象
                      } catch (error) {
                          // 如果文件不存在或读取失败，捕获错误并返回空对象
                          console.warn(`文件 ${process.env.DATA_CENTER_FILE} 不存在或读取失败，返回空对象。`);
                          json = { data: [] }; // 初始化一个空的数据结构
                      }

                      // {
                      //   "data": [
                      //     {
                      //       "name": "runner-images",
                      //       "description": "GitHub Actions Runner OS Versions",
                      //       "description.zh": "GitHub Actions Runner 操作系统版本",
                      //       "path": "runner-images.json",
                      //       "updated": "2021-10-01T00:00:00.000Z"
                      //     }
                      //   ]
                      // }

                      const index = json.data.findIndex(item => item.name === process.env.DATA_CENTER_NAME);
                      // 处理路径文件, 改成相对路径
                      const json_path = process.env.OUTPUI_PATH.replace(`${process.env.GITHUB_WORKSPACE}/`, '');
                      // 处理更新时间
                      const updated = new Date().toISOString();


                      if (index !== -1) {
                          json.data[index].path = json_path;
                          json.data[index].updated = updated;
                      } else {
                          json.data.push({
                              name: process.env.DATA_CENTER_NAME,
                              description: 'Chinese Holiday Information',
                              ["description.zh"]: '中国节假日信息',
                              path: json_path,
                              updated: updated
                          });
                      }

                      fs.writeFileSync(process.env.DATA_CENTER_FILE, JSON.stringify(json, null, 2));
                      console.log(`JSON 文件已更新：${process.env.DATA_CENTER_FILE}`);
            - name: Commit and push changes
              run: |
                git config --global user.name "GitHub Actions"
                git config --global user.email "actions@github.com"
                git add ${{ env.OUTPUI_PATH }}
                git commit -m "Auto-generated JSON file [skip ci]"
                git add ${{ env.DATA_CENTER_FILE }}
                git commit -m "Update data center file [skip ci]"
                git push
              